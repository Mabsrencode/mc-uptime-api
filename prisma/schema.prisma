// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  mobile_number String?  @unique
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}


model Site {
  id     String  @id @default(uuid())
  url    String  @unique
  userId String 
  monitorType String @default("HTTP")
  interval Int @default(5)
  email String 
  checks Check[]
  // mobile_number String?  @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  incident Incident[]
  notification Notification[]
}

model Check {
  id        String   @id @default(uuid())   
  siteId    String
  up        Boolean
  checkedAt DateTime @default(now())
  error     String?
  details   String?
  site Site @relation(fields: [siteId], references: [id], onDelete: Cascade)
}

model Incident {
  id        String   @id @default(uuid())
  siteId    String
  startTime DateTime @default(now())
  endTime   DateTime?
  resolved  Boolean  @default(false)
  site      Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)
  @@index([siteId, resolved])
  notification Notification[]
}

model Notification {
  id          String   @id @default(uuid())
  siteId      String
  incidentId  String
  sentAt      DateTime @default(now())
  type        String  
  site        Site     @relation(fields: [siteId], references: [id], onDelete: Cascade)
  incident    Incident @relation(fields: [incidentId], references: [id], onDelete: Cascade)

  @@index([siteId, sentAt]) 
}